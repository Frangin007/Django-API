Projet de Gestion de Livres
Ce projet est une application web Django conçue pour gérer une collection de livres. Il utilise PostgreSQL comme base de données et expose des API RESTful grâce à Django REST Framework.

Configuration Requise
Docker Desktop (pour Windows ou Mac) ou Docker Engine (pour Linux)
Python 3.8 ou supérieur

Installation
Clonez ce dépôt sur votre machine :

git clone https://github.com/votre_utilisateur/votre_projet.git

Accédez au répertoire du projet :



Lancez l'env virtuel dans git bash (por moi c'est préférable):
source env/Scripts/activate 

Construisez l'image Docker et lancez les conteneurs :

docker-compose up --build (lors de la première exécution)
docker-compose up

Accès à l'Application

Une fois les conteneurs Docker lancés, vous pouvez accéder à l'application dans votre navigateur web en visitant l'URL suivante :

http://127.0.0.1:8000/ (Ici, j'ai mis en place une petit formulaire html permettant l'ajout de livre)



Arrêt de l'Application :
Ouvrez un autre git bash et exécutez : docker compose down

Gestion de la Base de Données
Vous pouvez accéder à l'interface d'administration de Django en visitant l'URL suivante :


http://127.0.0.1:8000/admin     

Les identifiants par défaut sont les suivants :

Créez un superutilisateur en utilisant la commande:
docker compose run web python manage.py createsuperuser
API RESTful
Les API RESTful sont accessibles à l'URL suivante :


http://127.0.0.1:8000/test/books/search/
http://127.0.0.1:8000/test/books/
Vous pouvez utiliser des outils tels que Postman ou cURL pour interagir avec ces API et effectuer des opérations CRUD sur les livres.

Configuration Avancée
Consultez le fichier docker-compose.yml pour des options de configuration avancées telles que les variables d'environnement pour la base de données PostgreSQL ou les ports exposés.